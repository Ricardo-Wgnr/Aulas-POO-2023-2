/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package engtelecom.poo;

import java.util.HashMap;
import java.util.Scanner;

public class App {

    private HashMap<String, UnidadeCurricular> banco;

    public App() {
        this.banco = new HashMap<>();
    }

    public boolean adicionarUc() {

        String nome, codigo, sigla, ementa;
        int creditos;
        Scanner teclado = new Scanner(System.in);
        System.out.println("Digite o nome da disciplina:");
        nome = teclado.nextLine();
        System.out.println("Digite o código:");
        codigo = teclado.nextLine();
        System.out.println("Digite a sigla:");
        sigla = teclado.nextLine();
        System.out.println("Digite a ementa:");
        ementa = teclado.nextLine();
        System.out.println("Digite o número de créditos:");
        creditos = teclado.nextInt();

        UnidadeCurricular nova = new UnidadeCurricular(nome, codigo, sigla, creditos, ementa);
        var teste = this.banco.put(codigo, nova);
        if (teste == null) {
            System.out.println("Disciplina adicionada");
            return true;
        } else {
            this.banco.put(codigo, teste);
            System.out.println("Código de disciplina já existente. Não foi possivel adicionar nova disciplina");
            return false;
        }

    }

    public boolean removerUc() {
        Scanner teclado = new Scanner(System.in);
        String codigo;
        System.out.println("Digite o código da disciplina que deseja remover:");
        codigo = teclado.nextLine();
        var teste = this.banco.remove(codigo);
        if (teste == null) {
            System.out.println("Código da disciplina inexistente");
            return false;
        } else {
            System.out.println("Disciplina removida");
            return true;
        }
    }

    public boolean alterarUc() {

        Scanner teclado = new Scanner(System.in);
        System.out.println("Insira o código da disciplina que deseja alterar: ");
        String codigo = teclado.nextLine();
        if (this.banco.containsKey(codigo)) {
            System.out.println("Qual campo deseja alterar?");
            String campo = teclado.nextLine();
            switch (campo) {
                case "nome":
                    var nomeAntigo = this.banco.get(codigo);
                    System.out.println("Digite o novo nome: ");
                    String novoNome = teclado.nextLine();
                    nomeAntigo.setNome(novoNome);
                    System.out.println("Nome alterado");
                    return true;
                case "codigo":
                    var codigoAntigo = this.banco.get(codigo);
                    System.out.println("Digite o novo código: ");
                    String novoCodigo = teclado.nextLine();
                    codigoAntigo.setCodigo(novoCodigo);
                    System.out.println("Código alterado");
                    return true;
                case "sigla":
                    var siglaAntiga = this.banco.get(codigo);
                    System.out.println("Digite a nova sigla: ");
                    String novaSigla = teclado.nextLine();
                    siglaAntiga.setSigla(novaSigla);
                    System.out.println("Sigla alterada");
                    return true;
                case "creditos":
                    var creditosAntigos = this.banco.get(codigo);
                    System.out.println("Digite o novo número de créditos: ");
                    int novoCredito = teclado.nextInt();
                    creditosAntigos.setCreditos(novoCredito);
                    System.out.println("Créditos alterados");
                    return true;
                case "ementa":
                    var ementaAntiga = this.banco.get(codigo);
                    System.out.println("Digite a nova ementa: ");
                    String novaEmenta = teclado.nextLine();
                    ementaAntiga.setEmenta(novaEmenta);
                    System.out.println("Ementa alterada");
                    return true;
                case "objetivos":
                    System.out.println("Deseja adicionar ou remover um objetivo?");
                    String testeObjetivo = teclado.nextLine();
                    if (testeObjetivo.equals("adicionar")) {
                        System.out.println("Digite o novo objetivo: ");
                        String novoObjetivo = teclado.nextLine();
                        var objetivoAntigo = this.banco.get(codigo);
                        objetivoAntigo.adicionaObjetivo(novoObjetivo);
                        System.out.println("Objetivo adicionado");
                        return true;
                    } else if (testeObjetivo.equals("remover")) {
                        System.out.println("Digite o objetivo a ser removido: ");
                        String objetivoRemovido = teclado.nextLine();
                        var objetivoAtual = this.banco.get(codigo);
                        objetivoAtual.removeObjetivo(objetivoRemovido);
                        System.out.println("Objetivo removido");
                        return true;
                    } else {
                        System.out.println("Digite adicionar ou remover");
                        return false;
                    }
                case "conteudos":
                    System.out.println("Deseja adicionar ou remover um conteudo?");
                    String testeConteudo = teclado.nextLine();
                    if (testeConteudo.equals("adicionar")) {
                        System.out.println("Digite o novo conteúdo: ");
                        String novoConteudo = teclado.nextLine();
                        var conteudoAntigo = this.banco.get(codigo);
                        conteudoAntigo.adicionaConteudo(novoConteudo);
                        System.out.println("Conteúdo adicionado");
                        return true;
                    } else if (testeConteudo.equals("remover")) {
                        System.out.println("Digite o conteúdo a ser removido: ");
                        String conteudoRemovido = teclado.nextLine();
                        var conteudoAtual = this.banco.get(codigo);
                        conteudoAtual.removeConteudo(conteudoRemovido);
                        System.out.println("Conteúdo removido");
                        return true;
                    } else {
                        System.out.println("Digite adicionar ou remover");
                        return false;
                    }
                default:
                    System.out.println("Campo inválido");
                    return false;
            }
        }
        System.out.println("Código inexistente");
        return false;
    }

    public boolean exibirDados() {

        Scanner teclado = new Scanner(System.in);
        System.out.println("Digite o código da disciplina que deseja exibir os dados: ");
        String codigo = teclado.nextLine();

        if (this.banco.containsKey(codigo)) {
            var unidade = this.banco.get(codigo);
            System.out.println(unidade);
            return true;
        }
        return false;

    }

    public void listarSiglaNomeCreditos() {
        this.banco.forEach((chave, valor)->{
            var unidade = this.banco.get(chave);
            System.out.println("Sigla: " + unidade.getSigla());
            System.out.println("Nome: " + unidade.getNome());
            System.out.println("Créditos: " + unidade.getCreditos());
        });
    }
    public void menuDeOperacoes() {
        int opcao;
        Scanner teclado = new Scanner(System.in);

        do {
            System.out.println("O que deseja fazer?");
            System.out.println("1- Adicionar disciplina;");
            System.out.println("2- Remover disciplina;");
            System.out.println("3- Alterar um dado da disciplina;");
            System.out.println("4- Exibir todos os dados da disciplina;");
            System.out.println("5- Listar sigla, nome e créditos de todas disciplinas;");
            System.out.println("6- Fechar APP.");
            opcao = teclado.nextInt();

            switch (opcao) {
                case 1:
                    this.adicionarUc();
                    break;
                case 2:
                    this.removerUc();
                    break;
                case 3:
                    this.alterarUc();
                    break;
                case 4:
                    this.exibirDados();
                    break;
                case 5:
                    this.listarSiglaNomeCreditos();
                    break;
                case 6:
                    break;
                default:
                    System.out.println("Digite o número de uma das opções!");
                    break;
            }
        } while (opcao != 6);
    }

    public static void main(String[] args) {

        App teste = new App();
        teste.menuDeOperacoes();

    }

}


